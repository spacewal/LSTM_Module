# -*- coding: utf-8 -*-
"""LSTM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BftXBrj0UmmBmsV2icpbkGVy4UPzWaM0
"""

import streamlit as st
import pandas as pd
import numpy as np
from tensorflow.keras.models import load_model
from sklearn.preprocessing import MinMaxScaler
import yfinance as yf

# Load the model
model = load_model('best_model.h5')

scaler = MinMaxScaler(feature_range=(0, 1))

st.title('Stock Price Prediction App')

ticker = st.text_input('Enter Stock Ticker', value='AAPL')
input_date = st.text_input('Enter Date (YYYY-MM-DD)', value='2024-04-21')
predict_button = st.button('Predict Stock Prices')

if predict_button:
    try:
        input_date = pd.to_datetime(input_date)
        end_date = input_date
        start_date = input_date - pd.Timedelta(days=90)

        # Fetch data
        data = yf.download(ticker, start=start_date.strftime('%Y-%m-%d'), end=end_date.strftime('%Y-%m-%d'))

        if len(data) < 60:
            st.error("Not enough historical data to make a prediction. Try an earlier date.")
        else:
            closing_prices = data['Close'].values[-60:]  # Last 60 days
            scaled_data = scaler.fit_transform(closing_prices.reshape(-1, 1))
            current_batch = scaled_data.reshape(1, 60, 1)
            predicted_prices = model.predict(current_batch)
            predicted_prices = scaler.inverse_transform(predicted_prices)

            st.success(f"Predicted Stock Prices for the next day: {predicted_prices.flatten()[0]}")
    except Exception as e:
        st.error(f"An error occurred: {str(e)}")
